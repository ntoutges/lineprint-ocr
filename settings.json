{
  "general": {
    "infolder": "C:/Users/Nicholas/FTP/FOCAL" // empty to use defualt (input/); specify with absolute path
  },
  "simplify": {
    "weights": {
      "r": 0.33,
      "g": 0.33,
      "b": 0.33,
      "base": 0.9
    },
    "threshold": 10
  },
  "denoise": { // assumes that img has already been simplified
    "limit": 300, // minimum size a blob must be to cound as real
    "autofill-borders": 200 // px to treat as the border
  },
  "horizontalPrune": {
    "thick": 30,   // min width of a thick region
    "thin": 10,    // max width of a thin region
    "distance": 10, // distance between "thick" and "thin" region
    "size-check-limit": 1000, // check if resulting region is still large enough to be considered a region, if not, remove from candidates
    "doDenoise": false, // run denoise to get rid of junk
    "debug": {
      "highlight-thins": false,      // grey
      "highlight-thicks": false,     // dark-red
      "highlight-finalists": false   // bright-red
    }
  },
  "charBounds": {
    "max-x-portion": 0.5, // maximum distances from the left to be considered a character
    "charSize": { // leave components at '0' to calculate automatically
      "x": 59,
      "y": 67
    },
    "y-splitting-function": "first", // "last" | "first"
    "y-bounds": "uniform", // "uniform" | "individual" | "mean" | "median"
    "xDiff": 10, // amount a pixel must be further left to be considered new
    "yBuffer": { // amount of pixels around the center line to check
      "total-offset": 20,
      "total": 15, // across entire page
      "individual": 20 // gap from one char to the next
    },
    "lookaround": { // amount of lines to look around for smallest gap when splitting conjoined chars
      "vertical-up": 5,
      "vertical-down": 20,
      "horizontal": 5
    },
    "width-expansion": {
      "max-height-ratio": 1.2 // height cannot expand by more than this much
    }
  },
  "charHighlight": {
    "doOutputBounds": true,
    "doHighlightSpace": false
  },
  "recognition": {
    "do-separate": true, // quickly run program (testing)
    "do-recognition": true, // quickly run program (testing)

    // amount that the progam will try to move the image to the center
    "x-center-weight": 1,
    "y-center-weight": 0.5, // 0 means y-centering won't apply at all
    "doOutputIndividual": false
  },
  "postprocessing": {
    "enabled": {
      "; Correction": true,
      ": Correction": true,
      "- Correction": true,
      "B/8 Correction": false,
      "B/8 Replacement": false
    },
    "settings": {
      "; Correction": {},
      ": Correction": {
        "min-ratio": 1.5
      },
      "- Correction": {},
      "B/8 Correction": {
        "min-ratio": 1.5, // "B/8" must be less than [] units from a "8/B" for change to occur
        "flatness-smoothing": 15,
        "threshold": 6, // at or above this, number:8, below, char:B
        "top-bottom-buffer": 0 // prevent top or bottom of number coming into flatness calculation
      },
      "B/8 Replacement": { // "null" indicates unknown
        "b-replacement-char": null,
        "8-replacement-char": null
      }
    }
  },
  "combination": {
    "do-combination": true,
    "outfile": "out.txt",
    "file-seperator": "", // separates the end of one file from the start of the next
    "disregard-header": true, // ignore first line of each page
    "autocorrect": {
      ".8YTE": ".BYTE",
      ".0EF": ".DEF",
      "$": "S" // far too similar--these will be corrected by some post-post processing (I hope...)
    },
    "prompt-unknown": [] // array of all characters to prompt user on
  },

  // reads from output/, writes to postoutput/
  "post-postprocessing": { // uses only text data from a file, and relying on patterns // run individually with -text 1
    "enabled": {
      "$ recognition": true,
      "format": true
    },
    "settings": {
      "$ recognition": {},
      "format": {
        "sections": [ 0, 4, 13, 22, 30, 37, 53 ],
        "wriggle-room": 2
      }
    }
  }
}